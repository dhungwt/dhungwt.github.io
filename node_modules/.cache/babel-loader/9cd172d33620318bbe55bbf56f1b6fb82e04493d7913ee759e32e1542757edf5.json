{"ast":null,"code":"var _jsxFileName = \"/Users/dianahung/Documents/HCI Fall 23/hcitodo/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  var _props$tasks;\n  const [tasks, setTasks] = useState([]);\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid()}`,\n      name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n  function deleteTask(id) {\n    //filter out all tasks that do not match the id\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    //save a new version of tasks w/o the task that was deleted\n    setTasks(remainingTasks);\n  }\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      //if ids dont match, return original obj\n      return task;\n    });\n    //update our tasks w/ updated tasks\n    setTasks(updatedTasks);\n  }\n  const taskList = (_props$tasks = props.tasks) === null || _props$tasks === void 0 ? void 0 : _props$tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoMatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: \"3 tasks remaining\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Form","Todo","nanoid","React","useState","jsxDEV","_jsxDEV","App","props","_s","_props$tasks","tasks","setTasks","addTask","name","newTask","id","completed","deleteTask","remainingTasks","filter","task","toggleTaskCompleted","updatedTasks","map","taskList","fileName","_jsxFileName","lineNumber","columnNumber","className","children","role","_c","$RefreshReg$"],"sources":["/Users/dianahung/Documents/HCI Fall 23/hcitodo/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Form from \"./components/Form\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport React, { useState } from \"react\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState([]);\n\n \n    function addTask(name) {\n      const newTask = { id: `todo-${nanoid()}`, name, completed: false };\n      setTasks([...tasks, newTask]);\n    }\n\n    function deleteTask(id) {\n      //filter out all tasks that do not match the id\n      const remainingTasks = tasks.filter((task) => id !== task.id);\n      //save a new version of tasks w/o the task that was deleted\n      setTasks(remainingTasks);\n    }\n    \n    \n    \n    function toggleTaskCompleted(id) {\n      const updatedTasks = tasks.map((task) => {\n        // if this task has the same ID as the edited task\n        if (id === task.id) {\n          // use object spread to make a new object\n          // whose `completed` prop has been inverted\n          return { ...task, completed: !task.completed };\n        }\n        //if ids dont match, return original obj\n        return task;\n      });\n      //update our tasks w/ updated tasks\n      setTasks(updatedTasks);\n    }\n    \n    \n\n  const taskList = props.tasks?.map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n    />\n  ));\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\"></div>\n      <h2 id=\"list-heading\">3 tasks remaining</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}